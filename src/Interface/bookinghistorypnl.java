/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Airliner;
import Business.Customer;
import Business.TravelAgency;
import Business.bookinghistory;
import java.awt.CardLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class bookinghistorypnl extends javax.swing.JPanel {

    /**
     * Creates new form bookinghistory
     */
    private TravelAgency TA;
    private JPanel rightPanel;
    public bookinghistorypnl(JPanel rightPanel,TravelAgency TA) {
        this.TA=TA;
        this.rightPanel=rightPanel;
        initComponents();
        populate();
        //airComboBox.setEnabled(false);
            
        filterComboBox.insertItemAt("", 0);
    }
    
    public void populatecustomer()
    {   airComboBox.removeAllItems();
        airComboBox.insertItemAt("", 0);
        DefaultComboBoxModel cbm=(DefaultComboBoxModel)airComboBox.getModel();
        cbm.removeAllElements();
        for(Customer c : TA.getcDir().getCustomerArrayList())
        {
            Object obj=new Object();
            obj=c;
            cbm.addElement(obj);
        }
    }
    
    public void populateair()
    {   airComboBox.removeAllItems();
        airComboBox.insertItemAt("",0);
        DefaultComboBoxModel cbm=(DefaultComboBoxModel)airComboBox.getModel();
        for(Airliner air : TA.getAirArrayList())
        {
            Object obj=new Object();
            obj=air;
            cbm.addElement(obj);
        }
    }
    
    public void populate()
    {
        DefaultTableModel dtm = (DefaultTableModel)bhistable.getModel();
        dtm.setRowCount(0);        
        for(bookinghistory b : TA.getBhisAL()){
            Object[] row = new Object[dtm.getColumnCount()];
            row[0]=b.getAir();
            row[1]=b.getfName();
            row[2]=b.getCfname();
            row[3]=b.getSrc();
            row[4]=b.getDest();
            row[5]=b.getDate();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filterComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        airComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        bhistable = new javax.swing.JTable();
        Searchbtn = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        filterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Airliner", "Customer" }));
        filterComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Select filter:");

        jLabel2.setText("Select Value: ");

        airComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                airComboBoxActionPerformed(evt);
            }
        });

        bhistable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airliner", "Flight", "Customer", "From", "To", "Date"
            }
        ));
        jScrollPane1.setViewportView(bhistable);

        Searchbtn.setText("Search");
        Searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchbtnActionPerformed(evt);
            }
        });

        backButton.setText("back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(filterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(68, 68, 68)
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(airComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Searchbtn))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 772, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(airComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Searchbtn))
                .addGap(72, 72, 72)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(43, 43, 43))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchbtnActionPerformed
        DefaultTableModel dtm = (DefaultTableModel)bhistable.getModel();
        dtm.setRowCount(0); 
        String cmp=null;
        String str=filterComboBox.getSelectedItem().toString();
        switch(str)
        {
            case "Airliner": String str1=String.valueOf(airComboBox.getSelectedItem());
                             for(bookinghistory b : TA.getBhisAL())
                             {
                                 if(str1.equals(b.getAir()))
                                 {
                                   Object[] row = new Object[dtm.getColumnCount()];
                                    row[0]=b.getAir();
                                    row[1]=b.getfName();
                                    row[2]=b.getCfname();
                                    row[3]=b.getSrc();
                                    row[4]=b.getDest();
                                    row[5]=b.getDate();
                                    dtm.addRow(row);  
                                 }
                                 else{
                                    
                                 }
                             }
                             break;
            case "Customer": String str2=String.valueOf(airComboBox.getSelectedItem());
                             for(bookinghistory b : TA.getBhisAL())
                             {   //cmp=b.getCfname();
                                 if(str2.equals(b.getCfname()))
                                 {
                                    Object[] row = new Object[dtm.getColumnCount()];
                                    row[0]=b.getAir();
                                    row[1]=b.getfName();
                                    row[2]=b.getCfname();
                                    row[3]=b.getSrc();
                                    row[4]=b.getDest();
                                    row[5]=b.getDate();
                                    dtm.addRow(row);  
                                 }
                                 else{
                                      
                                 }
                                 
                             }
                             break;
            case "": JOptionPane.showMessageDialog(null, "Please make a selection");
                     break;
            default:break;
            
        }   
    }//GEN-LAST:event_SearchbtnActionPerformed

    private void filterComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterComboBoxActionPerformed
        String str=filterComboBox.getSelectedItem().toString();
        if(str.equals("Airliner"))
        {
          populateair();
        }
        else if(str.equals("Customer"))
        {
          populatecustomer();
        }
        else
        {
            return;
        }
        
    }//GEN-LAST:event_filterComboBoxActionPerformed

    private void airComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_airComboBoxActionPerformed
        
        
    }//GEN-LAST:event_airComboBoxActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        rightPanel.remove(this);
       CardLayout layout = (CardLayout)rightPanel.getLayout();
       layout.previous(rightPanel);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Searchbtn;
    private javax.swing.JComboBox<String> airComboBox;
    private javax.swing.JButton backButton;
    private javax.swing.JTable bhistable;
    private javax.swing.JComboBox<String> filterComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
